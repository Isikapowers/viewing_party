---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/movie/upcoming?api_key=<api_key>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Oct 2021 04:46:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ec4d04f2befcd6652834fd368a8b671e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - lSfyWucki_dZ5jYkxPZt2Scfjiy9tF0QPw9RX6b0ENywOpbj36e7kw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRlcyI6eyJtYXhpbXVtIjoiMjAyMS0xMS0xMSIsIm1pbmltdW0iOiIyMDIxLTEwLTE5In0sInBhZ2UiOjEsInJlc3VsdHMiOlt7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii83MG54U3czbUZCc0dtdGt2Y3M5MVBiamVyd0QuanBnIiwiZ2VucmVfaWRzIjpbODc4LDI4XSwiaWQiOjU4MDQ4OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVmVub206IExldCBUaGVyZSBCZSBDYXJuYWdlIiwib3ZlcnZpZXciOiJBZnRlciBmaW5kaW5nIGEgaG9zdCBib2R5IGluIGludmVzdGlnYXRpdmUgcmVwb3J0ZXIgRWRkaWUgQnJvY2ssIHRoZSBhbGllbiBzeW1iaW90ZSBtdXN0IGZhY2UgYSBuZXcgZW5lbXksIENhcm5hZ2UsIHRoZSBhbHRlciBlZ28gb2Ygc2VyaWFsIGtpbGxlciBDbGV0dXMgS2FzYWR5LiIsInBvcHVsYXJpdHkiOjgyMjIuNjE2LCJwb3N0ZXJfcGF0aCI6Ii9yamttTjFkbmlVSFZZQXR3dVYzVGppN0ZzRE8uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wOS0zMCIsInRpdGxlIjoiVmVub206IExldCBUaGVyZSBCZSBDYXJuYWdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjgyOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIva1RPaGVWbXFTQkRJUkdyUUx2MlNpU2M4OW9zLmpwZyIsImdlbnJlX2lkcyI6WzE2LDM1LDEwNzUxXSwiaWQiOjYzOTcyMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEFkZGFtcyBGYW1pbHkgMiIsIm92ZXJ2aWV3IjoiVGhlIEFkZGFtcyBnZXQgdGFuZ2xlZCB1cCBpbiBtb3JlIHdhY2t5IGFkdmVudHVyZXMgYW5kIGZpbmQgdGhlbXNlbHZlcyBpbnZvbHZlZCBpbiBoaWxhcmlvdXMgcnVuLWlucyB3aXRoIGFsbCBzb3J0cyBvZiB1bnN1c3BlY3RpbmcgY2hhcmFjdGVycy4iLCJwb3B1bGFyaXR5IjoyMTkxLjAwNSwicG9zdGVyX3BhdGgiOiIveFlMQmd3N2RIeUVxbWNyU2syU3EzYXN1U3E1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMTAtMDEiLCJ0aXRsZSI6IlRoZSBBZGRhbXMgRmFtaWx5IDIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42LCJ2b3RlX2NvdW50IjozMjd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzJjZHJobGYzaHZ2dWVHeVFEeDB1OGpwV3ZRUi5qcGciLCJnZW5yZV9pZHMiOlsyNyw1M10sImlkIjo2MTAyNTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhhbGxvd2VlbiBLaWxscyIsIm92ZXJ2aWV3IjoiTWludXRlcyBhZnRlciBMYXVyaWUgU3Ryb2RlLCBoZXIgZGF1Z2h0ZXIgS2FyZW4gYW5kIGdyYW5kZGF1Z2h0ZXIgQWxseXNvbiBsZWZ0IG1hc2tlZCBtb25zdGVyIE1pY2hhZWwgTXllcnMgY2FnZWQgYW5kIGJ1cm5pbmcgaW4gTGF1cmllJ3MgYmFzZW1lbnQsIExhdXJpZSBpcyBydXNoZWQgdG8gdGhlIGhvc3BpdGFsIHdpdGggbGlmZS10aHJlYXRlbmluZyBpbmp1cmllcywgYmVsaWV2aW5nIHNoZSBmaW5hbGx5IGtpbGxlZCBoZXIgbGlmZWxvbmcgdG9ybWVudG9yLiBCdXQgd2hlbiBNaWNoYWVsIG1hbmFnZXMgdG8gZnJlZSBoaW1zZWxmIGZyb20gTGF1cmllJ3MgdHJhcCwgaGlzIHJpdHVhbCBibG9vZGJhdGggcmVzdW1lcy4gQXMgTGF1cmllIGZpZ2h0cyBoZXIgcGFpbiBhbmQgcHJlcGFyZXMgdG8gZGVmZW5kIGhlcnNlbGYgYWdhaW5zdCBoaW0sIHNoZSBpbnNwaXJlcyBhbGwgb2YgSGFkZG9uZmllbGQgdG8gcmlzZSB1cCBhZ2FpbnN0IHRoZWlyIHVuc3RvcHBhYmxlIG1vbnN0ZXIuIFRoZSBTdHJvZGUgd29tZW4gam9pbiBhIGdyb3VwIG9mIG90aGVyIHN1cnZpdm9ycyBvZiBNaWNoYWVsJ3MgZmlyc3QgcmFtcGFnZSB3aG8gZGVjaWRlIHRvIHRha2UgbWF0dGVycyBpbnRvIHRoZWlyIG93biBoYW5kcywgZm9ybWluZyBhIHZpZ2lsYW50ZSBtb2IgdGhhdCBzZXRzIG91dCB0byBodW50IE1pY2hhZWwgZG93biwgb25jZSBhbmQgZm9yIGFsbC4iLCJwb3B1bGFyaXR5IjoyNjM2Ljk5OSwicG9zdGVyX3BhdGgiOiIvcW1KR2Q1SWZVUnE4aVBROUtGM2xlczQ3dkZTLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMTAtMTQiLCJ0aXRsZSI6IkhhbGxvd2VlbiBLaWxscyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjUsInZvdGVfY291bnQiOjQ0N30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvaHJ6b3k4dnZVcnhRaXhPTTExcHdXOUFYN0J1LmpwZyIsImdlbnJlX2lkcyI6WzgwLDE4XSwiaWQiOjUyNDM2OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIE1hbnkgU2FpbnRzIG9mIE5ld2FyayIsIm92ZXJ2aWV3IjoiWW91bmcgQW50aG9ueSBTb3ByYW5vIGlzIGdyb3dpbmcgdXAgaW4gb25lIG9mIHRoZSBtb3N0IHR1bXVsdHVvdXMgZXJhcyBpbiBOZXdhcmssIE4uSi4sIGhpc3RvcnksIGJlY29taW5nIGEgbWFuIGp1c3QgYXMgcml2YWwgZ2FuZ3N0ZXJzIHN0YXJ0IHRvIHJpc2UgdXAgYW5kIGNoYWxsZW5nZSB0aGUgYWxsLXBvd2VyZnVsIERpTWVvIGNyaW1lIGZhbWlseS4gQ2F1Z2h0IHVwIGluIHRoZSBjaGFuZ2luZyB0aW1lcyBpcyB0aGUgdW5jbGUgaGUgaWRvbGl6ZXMsIERpY2tpZSBNb2x0aXNhbnRpLCB3aG9zZSBpbmZsdWVuY2Ugb3ZlciBoaXMgbmVwaGV3IHdpbGwgaGVscCBzaGFwZSB0aGUgaW1wcmVzc2lvbmFibGUgdGVlbmFnZXIgaW50byB0aGUgYWxsLXBvd2VyZnVsIG1vYiBib3NzLCBUb255IFNvcHJhbm8uIiwicG9wdWxhcml0eSI6MTMyNy4yNjksInBvc3Rlcl9wYXRoIjoiLzFVa2JQUXNwUGJxMUZQYkZQNFZWMUVMQ2ZTTi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA5LTIyIiwidGl0bGUiOiJUaGUgTWFueSBTYWludHMgb2YgTmV3YXJrIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOCwidm90ZV9jb3VudCI6MTMyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9ha252RnlKVVFRb1pGdG1Gbll6S2k0dkd2NEouanBnIiwiZ2VucmVfaWRzIjpbMTIsODc4LDE4LDI4XSwiaWQiOjQzODYzMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRHVuZSIsIm92ZXJ2aWV3IjoiUGF1bCBBdHJlaWRlcywgYSBicmlsbGlhbnQgYW5kIGdpZnRlZCB5b3VuZyBtYW4gYm9ybiBpbnRvIGEgZ3JlYXQgZGVzdGlueSBiZXlvbmQgaGlzIHVuZGVyc3RhbmRpbmcsIG11c3QgdHJhdmVsIHRvIHRoZSBtb3N0IGRhbmdlcm91cyBwbGFuZXQgaW4gdGhlIHVuaXZlcnNlIHRvIGVuc3VyZSB0aGUgZnV0dXJlIG9mIGhpcyBmYW1pbHkgYW5kIGhpcyBwZW9wbGUuIEFzIG1hbGV2b2xlbnQgZm9yY2VzIGV4cGxvZGUgaW50byBjb25mbGljdCBvdmVyIHRoZSBwbGFuZXQncyBleGNsdXNpdmUgc3VwcGx5IG9mIHRoZSBtb3N0IHByZWNpb3VzIHJlc291cmNlIGluIGV4aXN0ZW5jZS1hIGNvbW1vZGl0eSBjYXBhYmxlIG9mIHVubG9ja2luZyBodW1hbml0eSdzIGdyZWF0ZXN0IHBvdGVudGlhbC1vbmx5IHRob3NlIHdobyBjYW4gY29ucXVlciB0aGVpciBmZWFyIHdpbGwgc3Vydml2ZS4iLCJwb3B1bGFyaXR5IjoxNDE4LjQ0MSwicG9zdGVyX3BhdGgiOiIvbHIzY1lORGxKY3BUMUVXekZINDJhU0l2a2FiLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDktMTUiLCJ0aXRsZSI6IkR1bmUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC4xLCJ2b3RlX2NvdW50IjoxNzI2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9ha3dnMXM3aFY1bGplU1lGZmt3N2hUSGpWcWsuanBnIiwiZ2VucmVfaWRzIjpbMTYsMzUsMTIsMTA3NTFdLCJpZCI6NDU5MTUxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQm9zcyBCYWJ5OiBGYW1pbHkgQnVzaW5lc3MiLCJvdmVydmlldyI6IlRoZSBUZW1wbGV0b24gYnJvdGhlcnMg4oCUIFRpbSBhbmQgaGlzIEJvc3MgQmFieSBsaXR0bGUgYnJvIFRlZCDigJQgaGF2ZSBiZWNvbWUgYWR1bHRzIGFuZCBkcmlmdGVkIGF3YXkgZnJvbSBlYWNoIG90aGVyLiBCdXQgYSBuZXcgYm9zcyBiYWJ5IHdpdGggYSBjdXR0aW5nLWVkZ2UgYXBwcm9hY2ggYW5kIGEgY2FuLWRvIGF0dGl0dWRlIGlzIGFib3V0IHRvIGJyaW5nIHRoZW0gdG9nZXRoZXIgYWdhaW4g4oCmIGFuZCBpbnNwaXJlIGEgbmV3IGZhbWlseSBidXNpbmVzcy4iLCJwb3B1bGFyaXR5Ijo5NzIuODQ3LCJwb3N0ZXJfcGF0aCI6Ii91V1N0a0s4YnE5aXhZM2ZjN3kyMDlabGVDb0YuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wNy0wMSIsInRpdGxlIjoiVGhlIEJvc3MgQmFieTogRmFtaWx5IEJ1c2luZXNzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNywidm90ZV9jb3VudCI6MTUxOX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcUQ0NXhIQTM1SGRKREdPYUExQWdEd2lXRWdPLmpwZyIsImdlbnJlX2lkcyI6WzEwNzQ5LDE4XSwiaWQiOjc0NDI3NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQWZ0ZXIgV2UgRmVsbCIsIm92ZXJ2aWV3IjoiSnVzdCBhcyBUZXNzYSdzIGxpZmUgYmVnaW5zIHRvIGJlY29tZSB1bmdsdWVkLCBub3RoaW5nIGlzIHdoYXQgc2hlIHRob3VnaHQgaXQgd291bGQgYmUuIE5vdCBoZXIgZnJpZW5kcyBub3IgaGVyIGZhbWlseS4gVGhlIG9ubHkgcGVyc29uIHRoYXQgc2hlIHNob3VsZCBiZSBhYmxlIHRvIHJlbHkgb24gaXMgSGFyZGluLCB3aG8gaXMgZnVyaW91cyB3aGVuIGhlIGRpc2NvdmVycyB0aGUgbWFzc2l2ZSBzZWNyZXQgdGhhdCBzaGUncyBiZWVuIGtlZXBpbmcuIEJlZm9yZSBUZXNzYSBtYWtlcyB0aGUgYmlnZ2VzdCBkZWNpc2lvbiBvZiBoZXIgbGlmZSwgZXZlcnl0aGluZyBjaGFuZ2VzIGJlY2F1c2Ugb2YgcmV2ZWxhdGlvbnMgYWJvdXQgaGVyIGZhbWlseS4iLCJwb3B1bGFyaXR5Ijo4OTEuMjI0LCJwb3N0ZXJfcGF0aCI6Ii9kVTRIZm5URUpEZjlLdnhHUzloZ083QlZlanUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wOS0wMSIsInRpdGxlIjoiQWZ0ZXIgV2UgRmVsbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LCJ2b3RlX2NvdW50IjozNjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3U1RnA5R0J5OVc4ZnFrdUdmTEJ1dW9KZjU3Wi5qcGciLCJnZW5yZV9pZHMiOlsxMiwyOCw1M10sImlkIjozNzAxNzIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ik5vIFRpbWUgdG8gRGllIiwib3ZlcnZpZXciOiJCb25kIGhhcyBsZWZ0IGFjdGl2ZSBzZXJ2aWNlIGFuZCBpcyBlbmpveWluZyBhIHRyYW5xdWlsIGxpZmUgaW4gSmFtYWljYS4gSGlzIHBlYWNlIGlzIHNob3J0LWxpdmVkIHdoZW4gaGlzIG9sZCBmcmllbmQgRmVsaXggTGVpdGVyIGZyb20gdGhlIENJQSB0dXJucyB1cCBhc2tpbmcgZm9yIGhlbHAuIFRoZSBtaXNzaW9uIHRvIHJlc2N1ZSBhIGtpZG5hcHBlZCBzY2llbnRpc3QgdHVybnMgb3V0IHRvIGJlIGZhciBtb3JlIHRyZWFjaGVyb3VzIHRoYW4gZXhwZWN0ZWQsIGxlYWRpbmcgQm9uZCBvbnRvIHRoZSB0cmFpbCBvZiBhIG15c3RlcmlvdXMgdmlsbGFpbiBhcm1lZCB3aXRoIGRhbmdlcm91cyBuZXcgdGVjaG5vbG9neS4iLCJwb3B1bGFyaXR5Ijo1MDQuMjg3LCJwb3N0ZXJfcGF0aCI6Ii9pVWd5Z3QzZnNjUm9LV0NWMWQwQzdGYk05VFAuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wOS0yOSIsInRpdGxlIjoiTm8gVGltZSB0byBEaWUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50Ijo4MzN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzNwSXFkMWhnWjJ4cXpXRXlpWXA0YmxxRTlGaS5qcGciLCJnZW5yZV9pZHMiOls1MywzNiwxOF0sImlkIjo1MjIyNDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBDb3VyaWVyIiwib3ZlcnZpZXciOiJDb2xkIFdhciBzcHkgR3JldmlsbGUgV3lubmUgYW5kIGhpcyBSdXNzaWFuIHNvdXJjZSB0cnkgdG8gcHV0IGFuIGVuZCB0byB0aGUgQ3ViYW4gTWlzc2lsZSBDcmlzaXMuIiwicG9wdWxhcml0eSI6MzM3Ljg2MywicG9zdGVyX3BhdGgiOiIvekZJakt0WnJ6aG1jN0hlY2RGWFhqc0xSMklnLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDMtMTgiLCJ0aXRsZSI6IlRoZSBDb3VyaWVyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwidm90ZV9jb3VudCI6NDI4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9mUnJwT0lMeVh1V2FXTG1xRjdrWGVNVndJVFEuanBnIiwiZ2VucmVfaWRzIjpbMjcsNTMsMTIsOTY0OF0sImlkIjo1MjI0NDQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJsYWNrIFdhdGVyOiBBYnlzcyIsIm92ZXJ2aWV3IjoiQW4gYWR2ZW50dXJlLWxvdmluZyBjb3VwbGUgY29udmluY2UgdGhlaXIgZnJpZW5kcyB0byBleHBsb3JlIGEgcmVtb3RlLCB1bmNoYXJ0ZWQgY2F2ZSBzeXN0ZW0gaW4gdGhlIGZvcmVzdHMgb2YgTm9ydGhlcm4gQXVzdHJhbGlhLiBXaXRoIGEgdHJvcGljYWwgc3Rvcm0gYXBwcm9hY2hpbmcsIHRoZXkgYWJzZWlsIGludG8gdGhlIG1vdXRoIG9mIHRoZSBjYXZlLCBidXQgd2hlbiB0aGUgY2F2ZXMgc3RhcnQgdG8gZmxvb2QsIHRlbnNpb25zIHJpc2UgYXMgb3h5Z2VuIGxldmVscyBmYWxsIGFuZCB0aGUgZnJpZW5kcyBmaW5kIHRoZW1zZWx2ZXMgdHJhcHBlZC4gVW5rbm93biB0byB0aGVtLCB0aGUgc3Rvcm0gaGFzIGFsc28gYnJvdWdodCBpbiBhIHBhY2sgb2YgZGFuZ2Vyb3VzIGFuZCBodW5ncnkgY3JvY29kaWxlcy4iLCJwb3B1bGFyaXR5IjozMTkuNjM4LCJwb3N0ZXJfcGF0aCI6Ii85NVM2UGluUUl2VmU0dUpBZDgyYTJpR1owckEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wNy0wOSIsInRpdGxlIjoiQmxhY2sgV2F0ZXI6IEFieXNzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMSwidm90ZV9jb3VudCI6Mjc1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii80Qk9nU0d3RUVIWnVEaGlIVU9zclhhSkJxb2MuanBnIiwiZ2VucmVfaWRzIjpbMTgsMzYsMjhdLCJpZCI6NjE3NjUzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTGFzdCBEdWVsIiwib3ZlcnZpZXciOiJLaW5nIENoYXJsZXMgVkkgZGVjbGFyZXMgdGhhdCBLbmlnaHQgSmVhbiBkZSBDYXJyb3VnZXMgc2V0dGxlIGhpcyBkaXNwdXRlIHdpdGggaGlzIHNxdWlyZSBieSBjaGFsbGVuZ2luZyBoaW0gdG8gYSBkdWVsLiIsInBvcHVsYXJpdHkiOjIxMi45MTUsInBvc3Rlcl9wYXRoIjoiL3pqckpFMGZwelB2WDhzYUpYajhWTmZjakJvVS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTEwLTEzIiwidGl0bGUiOiJUaGUgTGFzdCBEdWVsIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNywidm90ZV9jb3VudCI6MTQ5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii8zRzZ3RVQ5ZUx2WW4zYW9JajhOZlFGaHBZRUIuanBnIiwiZ2VucmVfaWRzIjpbODc4LDI4LDEyLDE4XSwiaWQiOjUyNDQzNCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRXRlcm5hbHMiLCJvdmVydmlldyI6IlRoZSBFdGVybmFscyBhcmUgYSB0ZWFtIG9mIGFuY2llbnQgYWxpZW5zIHdobyBoYXZlIGJlZW4gbGl2aW5nIG9uIEVhcnRoIGluIHNlY3JldCBmb3IgdGhvdXNhbmRzIG9mIHllYXJzLiBXaGVuIGFuIHVuZXhwZWN0ZWQgdHJhZ2VkeSBmb3JjZXMgdGhlbSBvdXQgb2YgdGhlIHNoYWRvd3MsIHRoZXkgYXJlIGZvcmNlZCB0byByZXVuaXRlIGFnYWluc3QgbWFua2luZOKAmXMgbW9zdCBhbmNpZW50IGVuZW15LCB0aGUgRGV2aWFudHMuIiwicG9wdWxhcml0eSI6MjkyLjM4MiwicG9zdGVyX3BhdGgiOiIvNkFkWHdGVFJUQXpnZ0QyUVVUdDVCN0pGR0tMLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMTEtMDMiLCJ0aXRsZSI6IkV0ZXJuYWxzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL25WZUtOMjRUc2NNaFFLQnVHR1ljMm92RkJPNS5qcGciLCJnZW5yZV9pZHMiOlszNSwxMDc1MV0sImlkIjo3NjM4NzMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlVuZGVyIFdyYXBzIiwib3ZlcnZpZXciOiJUaHJlZSBmcmllbmRzIHRyeSB0byBzYXZlIHRoZWlyIG11bW1pZmllZCBmcmllbmQsIEhhcm9sZCwgZnJvbSBncmVlZHkgY3JpbWluYWxzIGJ5IHJldHVybmluZyBoaW0gdG8gaGlzIHJlc3RpbmcgcGxhY2UgYmVmb3JlIG1pZG5pZ2h0IG9uIEhhbGxvd2Vlbi4iLCJwb3B1bGFyaXR5IjoyNTUuODkyLCJwb3N0ZXJfcGF0aCI6Ii8yRW5IUnlIZGJvVVd6MTIwTERpQWsyTTJMZ2MuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0xMC0zMCIsInRpdGxlIjoiVW5kZXIgV3JhcHMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvOTlPaXlFT3NGZWNCaVM1WGtoUUFCOThybFA2LmpwZyIsImdlbnJlX2lkcyI6WzE2LDg3OCwxMDc1MSwzNV0sImlkIjo0ODIzMjEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJvbidzIEdvbmUgV3JvbmciLCJvdmVydmlldyI6IkluIGEgd29ybGQgd2hlcmUgd2Fsa2luZywgdGFsa2luZywgZGlnaXRhbGx5IGNvbm5lY3RlZCBib3RzIGhhdmUgYmVjb21lIGNoaWxkcmVuJ3MgYmVzdCBmcmllbmRzLCBhbiAxMS15ZWFyLW9sZCBmaW5kcyB0aGF0IGhpcyByb2JvdCBidWRkeSBkb2Vzbid0IHF1aXRlIHdvcmsgdGhlIHNhbWUgYXMgdGhlIG90aGVycyBkby4iLCJwb3B1bGFyaXR5IjoxNzIuNDM5LCJwb3N0ZXJfcGF0aCI6Ii9nQTlReFNyYXZDMkVWRWtFS2d5RW1EcmZMMGUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0xMC0xNSIsInRpdGxlIjoiUm9uJ3MgR29uZSBXcm9uZyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjozLjcsInZvdGVfY291bnQiOjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzJuVTVIOFhJZ3RNa0pyeHNyeVA2bkp1QUhRLmpwZyIsImdlbnJlX2lkcyI6WzE2LDE4LDEyLDEwNzUxXSwiaWQiOjgwNTA1MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU21lbGxpdmlsbGUiLCJvdmVydmlldyI6IlRoZSBPZ2dseSBmYW1pbHkgYXJyaXZlIGF0IHRoZSBtdW5pY2lwYWwgcnViYmlzaCBkdW1wIG9mIFNtZWxsaXZpbGxlIGFuZCBtdXN0IGxvb2sgZm9yIGEgbmV3IGhvbWUsIGJ1dCB0aGV5IG5ldmVyIGZlZWwgcmVhbGx5IHdlbGNvbWUgYW55d2hlcmUuIFRoZXkgc3RpbmsgYW5kIGFyZSBmb3IgbW9zdCBodW1hbnMganVzdCBhIHRhZCB0b28gb2dnbHkuIFdoZW4gRmlyZWJvdHRvbSwgdGhlIGZhbWlseSBkcmFnb24sIGNyYXNoLWxhbmRzIG9uIHRoZSBydW4tZG93biBydWJiaXNoIHRpcCBvZiB0aGUgc21hbGwgdG93biBvZiBTbWVsbGl2aWxsZSwgdGhlIE9nZ2xpZXMgYXQgb25jZSBmZWVsIGF0IGhvbWUuIEFuZCBpdCdzIGhlcmUgdGhleSB3YW50IHRvIHN0YXkuIiwicG9wdWxhcml0eSI6MTM5LjQ5LCJwb3N0ZXJfcGF0aCI6Ii93N1BKN2ZCRVlPdWFBTUtmWWE0em13NDV2M04uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wMS0wMSIsInRpdGxlIjoiVGhlIE9nZ2xpZXM6IFdlbGNvbWUgdG8gU21lbGxpdmlsbGUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42LCJ2b3RlX2NvdW50IjozMH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMlJIamQxMHdxdjU3eFl6WmtOSzhTbDA5RGR0LmpwZyIsImdlbnJlX2lkcyI6WzE2LDI4LDM1LDE0LDEyXSwiaWQiOjc2ODc0NCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoi5YOV44Gu44OS44O844Ot44O844Ki44Kr44OH44Of44KiIFRIRSBNT1ZJRSDjg6/jg7zjg6vjg4kg44OS44O844Ot44O844K6IOODn+ODg+OCt+ODp+ODsyIsIm92ZXJ2aWV3IjoiQSBteXN0ZXJpb3VzIGdyb3VwIGNhbGxlZCBIdW1hcml6ZSBzdHJvbmdseSBiZWxpZXZlcyBpbiB0aGUgUXVpcmsgU2luZ3VsYXJpdHkgRG9vbXNkYXkgdGhlb3J5IHdoaWNoIHN0YXRlcyB0aGF0IHdoZW4gcXVpcmtzIGdldCBtaXhlZCBmdXJ0aGVyIGluIHdpdGggZnV0dXJlIGdlbmVyYXRpb25zLCB0aGF0IHBvd2VyIHdpbGwgYnJpbmcgZm9ydGggdGhlIGVuZCBvZiBodW1hbml0eS4gSW4gb3JkZXIgdG8gc2F2ZSBldmVyeW9uZSwgdGhlIFByby1IZXJvZXMgYXJvdW5kIHRoZSB3b3JsZCBhc2sgVUEgQWNhZGVteSBoZXJvZXMtaW4tdHJhaW5pbmcgdG8gYXNzaXN0IHRoZW0gYW5kIGZvcm0gYSB3b3JsZC1jbGFzc2ljIHNlbGVjdGVkIGhlcm8gdGVhbS4gSXQgaXMgdXAgdG8gdGhlIGhlcm9lcyB0byBzYXZlIHRoZSB3b3JsZCBhbmQgdGhlIGZ1dHVyZSBvZiBoZXJvZXMgaW4gd2hhdCBpcyB0aGUgbW9zdCBkYW5nZXJvdXMgY3Jpc2lzIHRvIHRha2UgcGxhY2UgeWV0IGluIE15IEhlcm8gQWNhZGVteS4iLCJwb3B1bGFyaXR5IjoxNDAuMDQxLCJwb3N0ZXJfcGF0aCI6Ii80TlV6Y0t0WVBLa2ZUd0tzTGp3TnQ4blJJWFYuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wOC0wNiIsInRpdGxlIjoiTXkgSGVybyBBY2FkZW1pYTogV29ybGQgSGVyb2VzJyBNaXNzaW9uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwidm90ZV9jb3VudCI6MTV9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2c2d3VmZ3R5Y0pDUDUwOHRsQzNjclNZRkNnQy5qcGciLCJnZW5yZV9pZHMiOlszNywxOF0sImlkIjo3NDkyNzQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNyeSBNYWNobyIsIm92ZXJ2aWV3IjoiTWlrZSBNaWxvLCBhIG9uZS10aW1lIHJvZGVvIHN0YXIgYW5kIHdhc2hlZC11cCBob3JzZSBicmVlZGVyLCB0YWtlcyBhIGpvYiBmcm9tIGFuIGV4LWJvc3MgdG8gYnJpbmcgdGhlIG1hbidzIHlvdW5nIHNvbiBob21lIGZyb20gTWV4aWNvLiIsInBvcHVsYXJpdHkiOjkyLjE3NiwicG9zdGVyX3BhdGgiOiIvd3FhYVdBbFhnTE5HZEFlbVU3d052Rlo3MGhyLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDktMTYiLCJ0aXRsZSI6IkNyeSBNYWNobyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjgsInZvdGVfY291bnQiOjE5MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNGJyNEI4QzBTUklZY0tIVWdvYU9sR281ME1VLmpwZyIsImdlbnJlX2lkcyI6WzI3XSwiaWQiOjU3NTA4OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJydSIsIm9yaWdpbmFsX3RpdGxlIjoi0K/Qs9CwLiDQmtC+0YjQvNCw0YAg0YLRkdC80L3QvtCz0L4g0LvQtdGB0LAiLCJvdmVydmlldyI6IlRoZSB5b3VuZyBmYW1pbHkgd2hvIG1vdmVkIHRvIGEgbmV3IGFwYXJ0bWVudCBvbiB0aGUgb3V0c2tpcnRzIG9mIHRoZSBjaXR5LiBUaGUgbmFubnkgaGlyZWQgYnkgdGhlbSBmb3IgdGhlIG5ld2Jvcm4gZGF1Z2h0ZXIgcXVpY2tseSBnYWluZWQgY29uZmlkZW5jZS4gSG93ZXZlciwgdGhlIG9sZGVyIGJveSwgRWdvciwgdGFsa3MgYWJvdXQgdGhlIGZyaWdodGVuaW5nIGJlaGF2aW9yIG9mIGEgd29tYW4sIGJ1dCBoaXMgcGFyZW50cyBkbyBub3QgYmVsaWV2ZSBoaW0uIFRoZSBzdXJ2ZWlsbGFuY2UgY2FtZXJhcyBpbnN0YWxsZWQgYnkgdGhlIGZhdGhlciBmb3IgY29tZm9ydCBvbmx5IGNvbmZpcm0gZXZlcnl0aGluZyBpcyBpbiBvcmRlci4gVGhlbiBvbmUgZGF5LCBFZ29yLCByZXR1cm5pbmcgaG9tZSwgZmluZHMgbm8gdHJhY2Ugb2YgZWl0aGVyIHRoZSBuYW5ueSBvciB0aGUgbGl0dGxlIHNpc3RlciwgYW5kIHRoZSBwYXJlbnRzIGFyZSBpbiBhIHN0cmFuZ2UgdHJhbmNlIGFuZCBkbyBub3QgZXZlbiByZW1lbWJlciB0aGF0IHRoZXkgaGFkIGEgZGF1Z2h0ZXIuIFRoZW4gRWdvciwgdG9nZXRoZXIgd2l0aCBoaXMgZnJpZW5kcywgZ29lcyBpbiBzZWFyY2gsIGR1cmluZyB3aGljaCBpdCB0dXJucyBvdXQgdGhhdCB0aGUgbmFubnkgaXMgYW4gYW5jaWVudCBTbGF2aWMgZGVtb24sIHBvcHVsYXJseSBrbm93biBhcyBCYWJhIFlhZ2EuIiwicG9wdWxhcml0eSI6ODEuNjE3LCJwb3N0ZXJfcGF0aCI6Ii84bTVIVFh6d2V3bGZYaHRadExsTHRzNTNZVFcuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wMi0yNyIsInRpdGxlIjoiQmFiYSBZYWdhOiBUZXJyb3Igb2YgdGhlIERhcmsgRm9yZXN0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYsInZvdGVfY291bnQiOjE1Nn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNFR6OFY4YVJpbThjRmdLRVdwclNVakJ5OHRZLmpwZyIsImdlbnJlX2lkcyI6WzE4LDEwNDAyLDEwNzQ5XSwiaWQiOjc3NjUwMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQ09EQSIsIm92ZXJ2aWV3IjoiQXMgYSBDT0RBIChDaGlsZCBvZiBEZWFmIEFkdWx0cyksIFJ1YnkgaXMgdGhlIG9ubHkgaGVhcmluZyBwZXJzb24gaW4gaGVyIGRlYWYgZmFtaWx5LiBXaGVuIHRoZSBmYW1pbHkncyBmaXNoaW5nIGJ1c2luZXNzIGlzIHRocmVhdGVuZWQsIFJ1YnkgZmluZHMgaGVyc2VsZiB0b3JuIGJldHdlZW4gcHVyc3VpbmcgaGVyIGxvdmUgb2YgbXVzaWMgYW5kIGhlciBmZWFyIG9mIGFiYW5kb25pbmcgaGVyIHBhcmVudHMuIiwicG9wdWxhcml0eSI6NzMuNDk1LCJwb3N0ZXJfcGF0aCI6Ii9CelZqbW04bDIzclBzaWpMaU5MVXp1UXR5ZC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA3LTMwIiwidGl0bGUiOiJDT0RBIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMywidm90ZV9jb3VudCI6MjM0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9kSzEyR0lkaEdQNk5QR0Zzc0syRmgyNjVqeXIuanBnIiwiZ2VucmVfaWRzIjpbMjgsMzUsODAsNTNdLCJpZCI6NTEyMTk1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSZWQgTm90aWNlIiwib3ZlcnZpZXciOiJBbiBJbnRlcnBvbC1pc3N1ZWQgUmVkIE5vdGljZSBpcyBhIGdsb2JhbCBhbGVydCB0byBodW50IGFuZCBjYXB0dXJlIHRoZSB3b3JsZCdzIG1vc3Qgd2FudGVkLiBCdXQgd2hlbiBhIGRhcmluZyBoZWlzdCBicmluZ3MgdG9nZXRoZXIgdGhlIEZCSSdzIHRvcCBwcm9maWxlciBhbmQgdHdvIHJpdmFsIGNyaW1pbmFscywgdGhlcmUncyBubyB0ZWxsaW5nIHdoYXQgd2lsbCBoYXBwZW4uIiwicG9wdWxhcml0eSI6NjUuMzk3LCJwb3N0ZXJfcGF0aCI6Ii9BclNtYUpXaG9PTEhFSzdhdmFZRVRYc2lSMlIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0xMS0wNSIsInRpdGxlIjoiUmVkIE5vdGljZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfV0sInRvdGFsX3BhZ2VzIjoyMSwidG90YWxfcmVzdWx0cyI6NDExfQ==
    http_version: null
  recorded_at: Wed, 20 Oct 2021 04:46:48 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/movie/upcoming?api_key=<api_key>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Oct 2021 04:46:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 94bd5e4f47540501369a53d4ae35d3b3.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - HPsigdpwqbK0lz41euNPaxKAhMdMcSGh3Bva-A1LtXgA0gbgsDgH-w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 20 Oct 2021 04:46:48 GMT
recorded_with: VCR 5.1.0
